{"ast":null,"code":"var _jsxFileName = \"/Users/gilberttuyishime/Documents/projects/challenge(Nell)/challenge_b/challenge_2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport searchIcon from './assets/searchIcon.png';\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Box, AppBar, Toolbar, Container, Paper, InputBase, Button, Grid } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: 15\n  },\n  btn: {\n    textTransform: 'capitalize'\n  },\n  appBar: {\n    backgroundColor: \"#2593C0\"\n  },\n  search: {\n    flexGrow: 1\n  },\n  button: {\n    backgroundColor: \"#2593C0\",\n    color: \"#ffffff\",\n    textTransform: 'capitalize'\n  },\n  card: {\n    borderRadius: 15\n  },\n  image: {\n    borderRadius: 15\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [photos, setPhotos] = useState([]);\n  const [id, setId] = useState(null); // get album photo by id \n\n  const getAlbumPhoto = () => {\n    if (id !== null && id !== 0) {\n      setLoading(true);\n      const searchInstance = axios.create({\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      searchInstance.get(\"https://challengethree.darasa.info/getAlbum.php?id=\" + id).then(res => {\n        console.log(res.data);\n        setPhotos(res.data);\n        setLoading(false);\n      });\n    }\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      className: classes.appBar,\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.title,\n          ml: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Challenge 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        pt: 10,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            p: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(InputBase, {\n                className: classes.search,\n                size: \"small\",\n                placeholder: \"Search by Album Id\",\n                inputProps: {\n                  'aria-label': 'naked'\n                },\n                onChange: (v, e) => {\n                  let id_ = v.target.value;\n\n                  if (id_ !== 0) {\n                    setId(id_);\n                  } else {\n                    setId(null);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                size: \"small\",\n                elevation: 0,\n                className: classes.button,\n                onClick: getAlbumPhoto,\n                startIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 26\n                }, this),\n                children: \"Get Photos By Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), loading === false && photos.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 10,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            width: 320\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: loading === true ? [1, 2, 3].map((i, m) => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 6,\n                md: 6,\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderRadius: 15,\n                  width: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"rect\",\n                    height: 150,\n                    width: \"100%\",\n                    style: {\n                      borderRadius: 15\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                    variant: \"text\",\n                    width: \"68%\",\n                    style: {\n                      borderRadius: 7\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 1\n              }, this);\n            }) : photos.map((pho, i) => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                sm: 6,\n                md: 6,\n                lg: 4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Paper, {\n                    className: classes.card,\n                    elevation: 0,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      height: \"150px\",\n                      width: 1,\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      flexDirection: \"column\",\n                      border: 0,\n                      borderRadius: \"borderRadius\",\n                      borderColor: \"grey.300\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: pho.thumbnailUrl,\n                        className: classes.image\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    mt: 1,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      m: 2,\n                      style: {\n                        fontSize: \"12px\"\n                      },\n                      color: \"inherit\",\n                      children: pho.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 21\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wwFvkUkJmVtmJsHutFHLerq2HGk=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gilberttuyishime/Documents/projects/challenge(Nell)/challenge_b/challenge_2/src/App.js"],"names":["searchIcon","React","useState","useEffect","makeStyles","Typography","Box","AppBar","Toolbar","Container","Paper","InputBase","Button","Grid","Skeleton","Search","axios","require","useStyles","theme","root","flexGrow","title","paper","padding","btn","textTransform","appBar","backgroundColor","search","button","color","card","borderRadius","image","App","classes","loading","setLoading","photos","setPhotos","id","setId","getAlbumPhoto","searchInstance","create","headers","get","then","res","console","log","data","v","e","id_","target","value","length","map","i","m","pho","thumbnailUrl","fontSize"],"mappings":"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","sourcesContent":["import './App.css';\nimport searchIcon from './assets/searchIcon.png';\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Typography,\n  Box,\n  AppBar,\n  Toolbar,\n  Container,\n  Paper,\n  InputBase,\n  Button,\n  Grid\n} from \"@material-ui/core\";\nimport { Skeleton} from \"@material-ui/lab\";\nimport {\n  Search\n} from \"@material-ui/icons\";\n\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: 15,\n  },\n  btn:{\n    textTransform:'capitalize'\n  },\n  appBar:{\n    backgroundColor:\"#2593C0\"\n  },\n \n  search:{\n    flexGrow:1\n  },\n  button:{\n    backgroundColor:\"#2593C0\",\n    color:\"#ffffff\",\n    textTransform:'capitalize'\n  },\n  card: {\n    borderRadius: 15,\n  },\n  image:{\n    borderRadius: 15,\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  const [loading,setLoading]=useState(false);\n  const [photos,setPhotos]=useState([]);\n  const [id,setId]=useState(null);\n\n  // get album photo by id \n\n  const getAlbumPhoto=()=>{\n    if(id!==null&&id!==0){\n      setLoading(true);\n    const searchInstance = axios.create(\n      {headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    }\n    );\n\n    searchInstance.get(\"https://challengethree.darasa.info/getAlbum.php?id=\"+id)\n    .then((res)=>{\n      console.log(res.data);\n      setPhotos(res.data);\n      setLoading(false);\n    });\n  }\n  }\n\n  useEffect(()=>{\n\n  },[]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar} elevation={0}>\n        <Toolbar>\n          <Box className={classes.title} ml={2}>\n          \n              <Typography variant=\"h5\">Challenge 2</Typography>\n           \n          </Box>\n\n        </Toolbar>\n      </AppBar>\n      <Container maxWidth=\"sm\">\n      <Box pt={10}>\n            <Paper className={classes.paper}>\n              <Box p={0} display=\"flex\" flexDirection=\"column\">\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                <InputBase\n                className={classes.search}\n                size=\"small\"\n                placeholder=\"Search by Album Id\"\n                inputProps={{ 'aria-label': 'naked' }}\n                onChange={(v,e)=>{\n                  let id_=v.target.value;\n                  if(id_!==0){\n                    setId(id_);\n                  }else{\n                    setId(null);\n                  }\n                }}\n              /> \n              <Button\n              variant=\"contained\"\n              size=\"small\"\n              elevation={0}\n              className={classes.button}\n              onClick={getAlbumPhoto}\n\n              startIcon={<Search />}>\n              Get Photos By Id\n              </Button>\n                </Box>\n              </Box>\n             </Paper>\n             {loading===false&&photos.length===0&&(\n                 <Box mt={10} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                   <img src={searchIcon} width={320}/>\n                 </Box>\n                 )\n               }\n\n             <Box mt={5}>\n             <Grid container spacing={2}>\n\n               \n\n               {loading===true?\n               \n               [1,2,3].map((i,m)=>{ \n                 return(\n<Grid item xs={6} sm={6} md={6} lg={4}>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  borderRadius={15}\n                  width={1}\n                >\n                  <Skeleton\n                    variant=\"rect\"\n                    height={150}\n                    width={\"100%\"}\n                    style={{ borderRadius: 15 }}\n                  />\n\n                  <Skeleton\n                    variant=\"text\"\n                    width={\"68%\"}\n                    style={{ borderRadius: 7 }}\n                  />\n                </Box>\n              </Grid>\n                 );\n               }\n               ):\n\n               photos.map((pho,i)=>{\nreturn(\n              <Grid item xs={6} sm={6} md={6} lg={4}>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  flexDirection=\"column\"\n                >\n                 \n                    <Paper className={classes.card} elevation={0}>\n                      <Box\n                        height=\"150px\"\n                        width={1}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        flexDirection=\"column\"\n                        border={0}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.300\"\n                      >\n                        <img src={pho.thumbnailUrl} className={classes.image}/>\n                      </Box>\n                    </Paper>\n\n                  <Box mt={1}  display=\"flex\"\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        flexDirection=\"column\">\n                    <Typography m={2} style={{fontSize:\"12px\"}} color=\"inherit\">{pho.title}</Typography>\n                  </Box>\n                </Box>\n              </Grid>\n);\n         \n               })\n\n              }\n             \n          \n              </Grid>\n           \n             </Box>\n       </Box >\n\n      </Container>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}